Traceback (most recent call last):
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/nbclient/client.py", line 553, in async_execute
    await self.async_execute_cell(
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/thormakai/anaconda3/envs/myenv/lib/python3.8/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
fig = plt.figure(figsize=(12,8))

# use pillow package to rotate images as needed
# from PIL import Image
# im1 = Image.open('resources/pictures/eupatorium-suze.JPG')
# im2 = Image.open('resources/pictures/DSC00610.JPG')

# angle = 90
# out = im1.rotate(angle)
# out.save('sc.jpg')
# out = im2.rotate(angle)
# out.save('mkc.jpg')

# check gridspec at:
# https://matplotlib.org/stable/api/_as_gen/matplotlib.gridspec.GridSpec.html
gs = GridSpec(8,14, figure=fig)

# read images
# check mp images at https://matplotlib.org/stable/tutorials/introductory/images.html
img_A = mpimg.imread('resources/pictures/suze-2.JPG')
img_B = mpimg.imread('resources/pictures/DSC04657.JPG')

# assign a grid space
axone = fig.add_subplot(gs[:, 0:6])
axtwo = fig.add_subplot(gs[:, 6:12])

# titles for each image
titles = ["Madretschkanal - Holunderweg", "Ile de la Suze - Swatch"]

# format each axis
for i, an_ax in enumerate([axone, axtwo]):
    hide_spines_ticks_grids(an_ax)
    an_ax.set_xlabel(titles[i], fontsize=16, loc='left', labelpad=15)
    
# show images
axone.imshow(img_A)
axtwo.imshow(img_B)


plt.tight_layout()
plt.show()

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mKeyboardInterrupt[0m                         Traceback (most recent call last)
[0;32m/tmp/ipykernel_10996/3433423927.py[0m in [0;36m<module>[0;34m[0m
[1;32m     19[0m [0;31m# check mp images at https://matplotlib.org/stable/tutorials/introductory/images.html[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[1;32m     20[0m [0mimg_A[0m [0;34m=[0m [0mmpimg[0m[0;34m.[0m[0mimread[0m[0;34m([0m[0;34m'resources/pictures/suze-2.JPG'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 21[0;31m [0mimg_B[0m [0;34m=[0m [0mmpimg[0m[0;34m.[0m[0mimread[0m[0;34m([0m[0;34m'resources/pictures/DSC04657.JPG'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     22[0m [0;34m[0m[0m
[1;32m     23[0m [0;31m# assign a grid space[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/myenv/lib/python3.8/site-packages/matplotlib/image.py[0m in [0;36mimread[0;34m(fname, format)[0m
[1;32m   1502[0m         return (_pil_png_to_float_array(image)
[1;32m   1503[0m                 [0;32mif[0m [0misinstance[0m[0;34m([0m[0mimage[0m[0;34m,[0m [0mPIL[0m[0;34m.[0m[0mPngImagePlugin[0m[0;34m.[0m[0mPngImageFile[0m[0;34m)[0m [0;32melse[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1504[0;31m                 pil_to_array(image))
[0m[1;32m   1505[0m [0;34m[0m[0m
[1;32m   1506[0m [0;34m[0m[0m

[0;32m~/anaconda3/envs/myenv/lib/python3.8/site-packages/matplotlib/image.py[0m in [0;36mpil_to_array[0;34m(pilImage)[0m
[1;32m   1635[0m     [0;32mif[0m [0mpilImage[0m[0;34m.[0m[0mmode[0m [0;32min[0m [0;34m[[0m[0;34m'RGBA'[0m[0;34m,[0m [0;34m'RGBX'[0m[0;34m,[0m [0;34m'RGB'[0m[0;34m,[0m [0;34m'L'[0m[0;34m][0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1636[0m         [0;31m# return MxNx4 RGBA, MxNx3 RBA, or MxN luminance array[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m
[0;32m-> 1637[0;31m         [0;32mreturn[0m [0mnp[0m[0;34m.[0m[0masarray[0m[0;34m([0m[0mpilImage[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m   1638[0m     [0;32melif[0m [0mpilImage[0m[0;34m.[0m[0mmode[0m[0;34m.[0m[0mstartswith[0m[0;34m([0m[0;34m'I;16'[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m   1639[0m         [0;31m# return MxN luminance array of uint16[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/myenv/lib/python3.8/site-packages/PIL/Image.py[0m in [0;36m__array__[0;34m(self, dtype)[0m
[1;32m    696[0m             [0mnew[0m[0;34m[[0m[0;34m"data"[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mtobytes[0m[0;34m([0m[0;34m"raw"[0m[0;34m,[0m [0;34m"L"[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    697[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 698[0;31m             [0mnew[0m[0;34m[[0m[0;34m"data"[0m[0;34m][0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mtobytes[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    699[0m [0;34m[0m[0m
[1;32m    700[0m         [0;32mclass[0m [0mArrayData[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/myenv/lib/python3.8/site-packages/PIL/Image.py[0m in [0;36mtobytes[0;34m(self, encoder_name, *args)[0m
[1;32m    742[0m             [0margs[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mmode[0m[0;34m[0m[0;34m[0m[0m
[1;32m    743[0m [0;34m[0m[0m
[0;32m--> 744[0;31m         [0mself[0m[0;34m.[0m[0mload[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    745[0m [0;34m[0m[0m
[1;32m    746[0m         [0;31m# unpack data[0m[0;34m[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/anaconda3/envs/myenv/lib/python3.8/site-packages/PIL/ImageFile.py[0m in [0;36mload[0;34m(self)[0m
[1;32m    253[0m [0;34m[0m[0m
[1;32m    254[0m                             [0mb[0m [0;34m=[0m [0mb[0m [0;34m+[0m [0ms[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 255[0;31m                             [0mn[0m[0;34m,[0m [0merr_code[0m [0;34m=[0m [0mdecoder[0m[0;34m.[0m[0mdecode[0m[0;34m([0m[0mb[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    256[0m                             [0;32mif[0m [0mn[0m [0;34m<[0m [0;36m0[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    257[0m                                 [0;32mbreak[0m[0;34m[0m[0;34m[0m[0m

[0;31mKeyboardInterrupt[0m: 
KeyboardInterrupt: 

